var MyRecipeBoxes = angular.module("MyRecipeBoxes", ['ngRoute',"firebase","ui.bootstrap"]);

MyRecipeBoxes.run([
	'$rootScope',
	'FIREBASE_URL',
	'$firebase',
	'$location',
	'$fireLogin',
	function($rootScope,FIREBASE_URL,$firebase,$location,$fireLogin)
	{
	$fireLogin.init(FIREBASE_URL,'/signup');
    $rootScope.$on('$firebaseSimpleLogin:login',function(evt,user)
    {
		console.log('User '+user.email+' Logged in', user);
		$rootScope.user_info = $firebase(new Firebase(FIREBASE_URL+"users/"+user.uid));

    });


    $rootScope.logout = function()
    {

        $fireLogin.$logout();
        $rootScope.user_info = undefined;
        $rootScope.user = undefined;
        $location.path('/login');
    };

	$rootScope.$on("$firebaseSimpleLogin:error", function(evt, err) {
		console.log('err',err);
	});

}]);
MyRecipeBoxes.constant("FIREBASE_URL","https://myrecipeboxes.firebaseio.com/");




/* **********************************************
     Begin partials.js
********************************************** */

MyRecipeBoxes.directive("createbox",function()
{
	return {
		restrict: "E",
		templateUrl: "views/boxes/create.html"
	};
});


/* **********************************************
     Begin routes.js
********************************************** */

MyRecipeBoxes.config(['$routeProvider','$authProvider',function($routeProvider,$authProvider)
{

	$routeProvider
	.when("/",{
		templateUrl: 'views/boxes/list.html',
		controller: "Boxes",
		resolve: $authProvider.resolve,
		authRequired: true
	})
	.when("/signup",{
		templateUrl: 'views/home.html',
		controller: "User",
		resolve: $authProvider.resolve,
		authRequired: false
	})
	.when("/login",{
		templateUrl: 'views/login.html',
		controller: "User",
		resolve: $authProvider.resolve,
		authRequired: false
	})
	.when("/boxes/:box_id",{
		templateUrl: 'views/boxes/box.html',
		controller: "Recipes",
		resolve: $authProvider.resolve,
		authRequired: true
	})
	.when("/boxes/:box_id/recipes/create",{
		templateUrl: 'views/recipes/create.html',
		controller: 'Recipes',
		resolve: $authProvider.resolve,
		authRequired: true
	})
	.when("/boxes/:box_id/recipes/:recipe_id",{
		templateUrl: 'views/recipes/get.html',
		controller: 'Recipes',
		resolve: $authProvider.resolve,
		authRequired: true
	})
	.when("/boxes/:box_id/recipes/:recipe_id/:type",{
		templateUrl: 'views/recipes/create.html',
		controller: 'Recipes',
		resolve: $authProvider.resolve,
		authRequired: true
	});

}]);

/* **********************************************
     Begin filters.js
********************************************** */

/* global MyRecipeBoxes */
MyRecipeBoxes.filter('toArray', function () {
    'use strict';

    return function (obj) {
        if (!(obj instanceof Object)) {
            return obj;
        }
        return Object.keys(obj).filter(function(key){if(key.charAt(0) !== "$") {return key;}}).map(function (key) {
            return Object.defineProperty(obj[key], '$key', {value: key});
        });
    };
});

/* **********************************************
     Begin UserController.js
********************************************** */

MyRecipeBoxes.controller("User",[
	'$scope',
	'$location',
	'$firebase',
	'FIREBASE_URL',
	'$rootScope',
	'$fireLogin',
	function($scope,$location,$firebase,FIREBASE_URL,$rootScope,$fireLogin)
{

	$scope.login = function()
	{
		$fireLogin.$login('password',$scope.user_form).then(function()
		{
			$location.path('/');
		},function(error)
		{
			//TODO: error handling
			console.log('error',error);
		});
	};

	$scope.create_user = function()
	{
		$fireLogin.$createUser($scope.user_form.email,$scope.user_form.password).then(function(user)
		{
			console.log('user',user);
			if(user)
			{
				$rootScope.user_info = $firebase(new Firebase(FIREBASE_URL+"users/"+user.uid));
				$rootScope.user_info.first_name = $scope.user_form.first_name;
				$rootScope.user_info.last_name = $scope.user_form.last_name;
				$rootScope.user_info.email = $scope.user_form.email;
				$rootScope.user_info.id = user.uid;
				$rootScope.user_info.$save();
				$location.path("/");
			}
		},function(error)
		{
			//TODO: error handling;
			console.log('error',error);
		});
	};

	// validate that the password and confirm password match
	$scope.validatePassword = function()
	{
		// set the not matching error if the passwords don't match
		$scope.signup.confirm.$error.notMatching = $scope.user_form.password !== $scope.user_form.confirm;
	};
}]);

/* **********************************************
     Begin RecipesController.js
********************************************** */

MyRecipeBoxes.controller("Recipes",[
	'FIREBASE_URL',
	'$scope',
	'$location',
	'$firebase',
	'$routeParams',
	'$rootScope',
	function(FIREBASE_URL,$scope,$location,$firebase,$routeParams,$rootScope)
	{
		$scope.box = $firebase(new Firebase(FIREBASE_URL+"boxes/"+$routeParams.box_id));
		$scope.boxes = $firebase(new Firebase(FIREBASE_URL+"boxes").startAt($rootScope.user.uid).endAt($rootScope.user.uid));

		if($routeParams.type !== "fork")
		{
			$scope.box_$id = $routeParams.box_id;
		}
		if($routeParams.recipe_id)
		{
			$scope.recipe = $scope.box.$child('recipes/'+$routeParams.recipe_id);
			$scope.recipe_$id = $routeParams.recipe_id;
			console.log('$scope.recipe',$scope.recipe);
		}
		else
		{
			// SETUP NG-MODEL
			$scope.recipe = {};
			$scope.recipe.ingredients = [{}];
		}

		$scope.sizes = ["Measurment","Cup(s)","Tbsp(s)","Tsp(s)","Oz(s)","None"];

		// DUMMY DATA
		$scope.recipe.title = "My Recipe";
		$scope.recipe.ingredients = [{size: "1",measurement:"Cup(s)",food:"flour"}];
		$scope.recipe.preheat = "350";
		$scope.recipe.directions = "Direction";

		$scope.save_recipe = function()
		{
			console.log('$scope.box_$id',$scope.box_$id);
			if($routeParams.box_id !== $scope.box_$id)
			{
				if($scope.box_$id === undefined)
				{
					return;
				}
				$scope.box = $firebase(new Firebase(FIREBASE_URL+"boxes/"+$scope.box_$id));
				$scope.box.$child('recipes').$add($scope.recipe);
			}
			else
			{
				if(typeof $routeParams.recipe_id !== 'undefined')
				{

					console.log('$scope.recipe',$scope.recipe);
					$scope.recipe.$save();

				}
				else{

					$scope.recipe.user_id = $rootScope.user.uid;
					$scope.box.$child('recipes').$add($scope.recipe);

				}
			}


			$location.path("/boxes/"+$scope.box_$id);

		};

	}]);

/* **********************************************
     Begin BoxesController.js
********************************************** */

MyRecipeBoxes.controller("Boxes",[
	'FIREBASE_URL',
	'$scope',
	'$firebase',
	'$rootScope',
	function(FIREBASE_URL,$scope,$firebase,$rootScope)
	{
		var boxes_ref = new Firebase(FIREBASE_URL+"boxes");
		$scope.newbox = {privacy: "public"};
		$scope.create_box = function()
		{
			$scope.boxes.$add({
				title: $scope.newbox.title,
				privacy: $scope.newbox.privacy,
				user_id: $rootScope.user.uid,
				$priority: $rootScope.user.uid,
				recipes: []
			});

			$scope.newbox = {privacy: "public"};

		};

		$scope.switch_filter = function(type)
		{

			if(type === 'user' && $rootScope.user)
			{
				$scope.my_boxes = true;
				$scope.box_filter = "";
				$scope.boxes = $firebase(boxes_ref.startAt($rootScope.user.uid).endAt($rootScope.user.uid));

			}
			else if(type === 'public' && $rootScope.user)
			{
				$scope.boxes = $firebase(boxes_ref);
				$scope.box_filter = {privacy:"public"};
				$scope.my_boxes = false;
			}

		};

		$scope.switch_filter('user');

	}]);